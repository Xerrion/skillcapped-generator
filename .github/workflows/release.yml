name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  actions: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: skillcapped-generator.exe
            asset_name: skillcapped-generator-windows-x64.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: skillcapped-generator
            asset_name: skillcapped-generator-linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: skillcapped-generator
            asset_name: skillcapped-generator-macos-x64

    steps:    
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        targets: ${{ matrix.target }}
        toolchain: nightly

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        # Cache key differentiated by OS and target
        key: ${{ matrix.os }}-${{ matrix.target }}
        # Save cache on all release builds
        cache-all-crates: true

    - name: Install nextest
      uses: taiki-e/install-action@v2
      with:
        tool: nextest

    - name: Run tests before release
      run: cargo nextest run --profile ci --target ${{ matrix.target }}

    - name: Generate icon (Windows only)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: .\create_icon.ps1

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}

    - name: Rename artifact
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          chmod +x ${{ matrix.asset_name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Extract changelog for release
      id: changelog
      run: |
        # Extract the latest version section from CHANGELOG.md
        awk '/^## \[/{if(p) exit; p=1} p' CHANGELOG.md > release_notes.md
        
        # Add download instructions
        cat >> release_notes.md << 'EOF'
        
        ## Downloads
        
        Choose the appropriate binary for your platform:
        
        - **Windows**: `skillcapped-generator-windows-x64.exe`
        - **Linux**: `skillcapped-generator-linux-x64`  
        - **macOS**: `skillcapped-generator-macos-x64`
        
        ## Quick Start
        
        1. Download the binary for your operating system
        2. Run the executable in your terminal
        3. Enter your Battle.net ID in format: `Name#1234`
        4. Use keyboard shortcuts to interact with the application
        
        **Cross-platform compatibility**: Works on Windows, macOS, and Linux with full clipboard integration.
        
        ---
        
        **Made by Xerrion** - [GitHub Repository](https://github.com/Xerrion/skillcapped-generator)
        EOF

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name }}
        name: SkillCapped Generator ${{ github.ref_name }}
        bodyFile: release_notes.md
        artifacts: |
          skillcapped-generator-windows-x64.exe/skillcapped-generator-windows-x64.exe
          skillcapped-generator-linux-x64/skillcapped-generator-linux-x64
          skillcapped-generator-macos-x64/skillcapped-generator-macos-x64
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
